module com.dslconsultancy.uiscript.xtext.GenerateUIScript

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "com.dslconsultancy.uiscript.xtext"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "com.dslconsultancy.uiscript.xtext.UIScript"
			fileExtensions = "uiscript"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/Components.xcore"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/Core.xcore"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/Expressions.xcore"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/ExpressionsAux.xcore"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/Services.xcore"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/Statements.xcore"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/Structural.xcore"
			referencedResource = "platform:/resource/com.dslconsultancy.uiscript.core/meta-model/Types.xcore"
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}
			fragment = org.eclipse.xtext.generator.adapter.FragmentAdapter {
				fragment = org.eclipse.xtext.generator.ecore2xtext.FormatterFragment {}
			}
			serializer = {
				generateStub = false
			}
		}
	}

}
