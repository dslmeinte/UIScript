@Ecore(nsURI="http://www.dslconsultancy.com/uicript/statements")
@GenModel(forceOverwrite="true", modelName="UIStatements", updateClasspath="false", complianceLevel="5.0")
package com.dslconsultancy.uiscript.statements

import com.dslconsultancy.uiscript.core.AbstractValueDeclaration
import com.dslconsultancy.uiscript.core.ArgumentList
import com.dslconsultancy.uiscript.core.Expression
import com.dslconsultancy.uiscript.core.IteratorVariable
import com.dslconsultancy.uiscript.core.Statement
import com.dslconsultancy.uiscript.core.StatementBlock
import com.dslconsultancy.uiscript.core.ViewableCallSite
import com.dslconsultancy.uiscript.expressions.aux.CallbackExpression
import com.dslconsultancy.uiscript.structural.UiModule
import com.dslconsultancy.uiscript.types.Feature


/*
 * Definitions of all statement sub types.
 */


abstract class ExitingStatement extends Statement {}

abstract class NonExitingStatement extends Statement {}


class AssignmentOrExpressionStatement extends NonExitingStatement {
	contains Expression lhs
	AssignmentOperator operator
	contains Expression rhs
}

enum AssignmentOperator {
	assign as "="
	add as "+=" = 1
	sub as "-=" = 2
}


class ForStatement extends NonExitingStatement {
	contains IteratorVariable indexVariable
	contains IteratorVariable valueVariable
	contains Expression listExpression
	contains StatementBlock thenBlock
}


class GotoModuleStatement extends ExitingStatement {
	refers UiModule targetModule
	contains ArgumentList args
	boolean authenticate
	contains CallbackExpression errorCallback
}


class GotoScreenStatement extends ExitingStatement, ViewableCallSite {}


class IfStatement extends NonExitingStatement {
	contains Expression condition
	contains StatementBlock thenBlock
	contains StatementBlock elseBlock
}


class ListRemoveStatement extends NonExitingStatement {
	contains Expression listExpr
	refers Feature<?> feature
	contains Expression valueExpr
	contains Expression indexVariable
}


class LocalValueDeclarationStatement extends AbstractValueDeclaration, NonExitingStatement {}


class UnsetStatement extends NonExitingStatement {
	contains Expression lhs
}

